@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>POS Screen</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.5/font/bootstrap-icons.min.css" rel="stylesheet">
    <style>
        body {
            overflow: hidden;
            height: 100vh;
        }

        .main-container {
            height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .top-bar {
            height: 50px;
            background-color: #0073AA;
            border-bottom: 2px solid #005a87;
        }

        .content-wrapper {
            flex: 1;
            display: flex;
            overflow: hidden;
        }

        .items-section {
            width: 66.666%;
            display: flex;
            flex-direction: column;
            border-right: 1px solid #dee2e6;
        }

        .search-section {
            width: 33.333%;
            padding: 20px;
            background-color: #f8f9fa;
        }

        .table-container {
            flex: 1;
            overflow-y: auto;
            padding: 15px;
        }

        .table thead {
            position: sticky;
            top: 0;
            z-index: 10;
        }

            .table thead th {
                background-color: #0073AA;
                color: white;
                font-weight: 600;
                border: none;
                padding: 12px 8px;
            }

        .table tbody td {
            padding: 10px 8px;
            vertical-align: middle;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .totals-footer {
            border-top: 2px solid #0073AA;
            padding: 15px;
            background-color: #fff;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
            font-size: 16px;
        }

            .total-row.grand-total {
                font-weight: bold;
                font-size: 20px;
                color: #0073AA;
                border-top: 2px solid #0073AA;
                padding-top: 12px;
                margin-top: 8px;
            }

        .action-footer {
            background-color: #0073AA;
            padding: 15px;
            display: flex;
            gap: 10px;
            justify-content: center;
        }

            .action-footer .btn {
                min-width: 120px;
                font-weight: 600;
                padding: 12px 24px;
            }

        .search-input {
            font-size: 18px;
            padding: 12px;
            border: 2px solid #0073AA;
        }

            .search-input:focus {
                border-color: #005a87;
                box-shadow: 0 0 0 0.25rem rgba(0, 115, 170, 0.25);
            }

        .search-label {
            font-weight: 600;
            color: #0073AA;
            margin-bottom: 10px;
            font-size: 16px;
        }

        .alert-success {
            position: fixed;
            top: 70px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
        }
    </style>
</head>
<body>
    <div class="main-container" x-data="posSystem()">
        <!-- Top Bar -->
        <div class="top-bar"></div>

        <!-- Success Alert -->
        <div x-show="showAlert" x-transition class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>
            <span x-text="alertMessage"></span>
            <button type="button" class="btn-close" @@click="showAlert = false"></button>
        </div>

        <div class="content-wrapper">
            <!-- Items Section (2/3) -->
            <div class="items-section">
                <div class="table-container">
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th style="width: 4%;">#</th>
                                <th style="width: 10%;">Item Code</th>
                                <th style="width: 10%;">RMA</th>
                                <th style="width: 25%;">Item</th>
                                <th style="width: 8%;">Unit</th>
                                <th style="width: 8%;">Qty</th>
                                <th style="width: 9%;">Rate</th>
                                <th style="width: 9%;">Disc Amt</th>
                                <th style="width: 8%;">Disc %</th>
                                <th style="width: 9%;">Gross</th>
                            </tr>
                        </thead>
                        <tbody>
                            <template x-for="(item, index) in items" :key="index">
                                <tr>
                                    <td x-text="index + 1"></td>
                                    <td x-text="item.itemCode"></td>
                                    <td x-text="item.rma"></td>
                                    <td x-text="item.itemName"></td>
                                    <td x-text="item.unit"></td>
                                    <td x-text="item.qty"></td>
                                    <td x-text="formatCurrency(item.rate)"></td>
                                    <td x-text="formatCurrency(item.discountAmt)"></td>
                                    <td x-text="item.discountPct + '%'"></td>
                                    <td x-text="formatCurrency(item.gross)"></td>
                                </tr>
                            </template>
                            <tr x-show="items.length === 0">
                                <td colspan="10" class="text-center text-muted">No items added. Scan an RMA to add items.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!-- Totals Footer -->
                <div class="totals-footer">
                    <div class="total-row">
                        <span>Subtotal:</span>
                        <span x-text="formatCurrency(subtotal)"></span>
                    </div>
                    <div class="total-row">
                        <span>Tax (16%):</span>
                        <span x-text="formatCurrency(tax)"></span>
                    </div>
                    <div class="total-row">
                        <span>Discount:</span>
                        <span x-text="formatCurrency(discount)"></span>
                    </div>
                    <div class="total-row grand-total">
                        <span>GRAND TOTAL:</span>
                        <span x-text="formatCurrency(grandTotal)"></span>
                    </div>
                </div>
            </div>

            <!-- Search Section (1/3) -->
            <div class="search-section">
                <div class="mb-3">
                    <label class="search-label">Search RMA</label>
                    <input type="text"
                           class="form-control search-input"
                           placeholder="Enter RMA number..."
                           x-model="rmaSearch"
                           @@keyup.enter="scanRMA()">
                </div>
                <div class="mt-4">
                    <button class="btn btn-outline-primary w-100 mb-2" @@click="scanRMA()">
                        <i class="bi bi-upc-scan me-2"></i>Scan Barcode
                    </button>
                    <button class="btn btn-outline-secondary w-100" @@click="clearSearch()">
                        <i class="bi bi-x-circle me-2"></i>Clear Search
                    </button>
                </div>
            </div>
        </div>

        <!-- Action Footer (Spans both sections) -->
        <div class="action-footer">
            <button class="btn btn-light" @@click="saveTransaction()">
                <i class="bi bi-save me-2"></i>Save
            </button>
            <button class="btn btn-light" @@click="reprintTransaction()">
                <i class="bi bi-printer me-2"></i>Reprint
            </button>
            <button class="btn btn-light" @@click="newTransaction()">
                <i class="bi bi-plus-circle me-2"></i>New Transaction
            </button>
            <button class="btn btn-warning" @@click="holdTransaction()">
                <i class="bi bi-pause-circle me-2"></i>Hold
            </button>
            <button class="btn btn-danger" @@click="cancelTransaction()">
                <i class="bi bi-x-circle me-2"></i>Cancel
            </button>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.13.3/cdn.min.js"></script>

    <script>
        function posSystem() {
            return {
                items: [],
                rmaSearch: '',
                showAlert: false,
                alertMessage: '',
                taxRate: 0.16,
                discount: 0,

                // Mock data for RMA lookup (replace with actual API call)
                rmaDatabase: {
                    'RMA2024001': {
                        itemCode: 'ITM001',
                        itemName: 'Product Sample Name Here',
                        unit: 'PCS',
                        qty: 5,
                        rate: 250.00,
                        discountPct: 10,
                        discountAmt: 125.00
                    },
                    'RMA2024002': {
                        itemCode: 'ITM002',
                        itemName: 'Another Product Item',
                        unit: 'KG',
                        qty: 10,
                        rate: 150.00,
                        discountPct: 5,
                        discountAmt: 75.00
                    },
                    'RMA2024003': {
                        itemCode: 'ITM003',
                        itemName: 'Sample Item Description',
                        unit: 'BOX',
                        qty: 2,
                        rate: 500.00,
                        discountPct: 15,
                        discountAmt: 150.00
                    },
                    'RMA2024004': {
                        itemCode: 'ITM004',
                        itemName: 'Electronics Component',
                        unit: 'PCS',
                        qty: 15,
                        rate: 75.00,
                        discountPct: 0,
                        discountAmt: 0.00
                    },
                    'RMA2024005': {
                        itemCode: 'ITM005',
                        itemName: 'Office Supplies Bundle',
                        unit: 'SET',
                        qty: 3,
                        rate: 450.00,
                        discountPct: 20,
                        discountAmt: 270.00
                    }
                },

                get subtotal() {
                    return this.items.reduce((sum, item) => sum + item.gross, 0);
                },

                get tax() {
                    return this.subtotal * this.taxRate;
                },

                get grandTotal() {
                    return this.subtotal + this.tax - this.discount;
                },

                scanRMA() {
                    if (!this.rmaSearch.trim()) {
                        this.showAlertMessage('Please enter an RMA number');
                        return;
                    }

                    // Look up RMA in database (replace with actual API call)
                    const rmaData = this.rmaDatabase[this.rmaSearch.trim()];

                    if (rmaData) {
                        const subtotalBeforeDiscount = rmaData.qty * rmaData.rate;
                        const gross = subtotalBeforeDiscount - rmaData.discountAmt;

                        // Check if item already exists
                        const existingItem = this.items.find(item => item.rma === this.rmaSearch.trim());

                        if (existingItem) {
                            this.showAlertMessage('Item already added to transaction');
                        } else {
                            this.items.push({
                                itemCode: rmaData.itemCode,
                                rma: this.rmaSearch.trim(),
                                itemName: rmaData.itemName,
                                unit: rmaData.unit,
                                qty: rmaData.qty,
                                rate: rmaData.rate,
                                discountAmt: rmaData.discountAmt,
                                discountPct: rmaData.discountPct,
                                gross: gross
                            });

                            this.showAlertMessage('Item added successfully');
                            this.rmaSearch = '';
                        }
                    } else {
                        this.showAlertMessage('RMA not found in system');
                    }
                },

                clearSearch() {
                    this.rmaSearch = '';
                },

                saveTransaction() {
                    if (this.items.length === 0) {
                        this.showAlertMessage('No items to save');
                        return;
                    }

                    // Replace with actual API call to save transaction
                    const transactionData = {
                        items: this.items,
                        subtotal: this.subtotal,
                        tax: this.tax,
                        discount: this.discount,
                        grandTotal: this.grandTotal,
                        timestamp: new Date().toISOString()
                    };

                    console.log('Saving transaction:', transactionData);
                    this.showAlertMessage('Transaction saved successfully!');
                },

                reprintTransaction() {
                    if (this.items.length === 0) {
                        this.showAlertMessage('No transaction to reprint');
                        return;
                    }

                    console.log('Reprinting transaction');
                    this.showAlertMessage('Sending to printer...');
                },

                newTransaction() {
                    if (this.items.length > 0) {
                        if (confirm('Start a new transaction? Current items will be cleared.')) {
                            this.items = [];
                            this.rmaSearch = '';
                            this.showAlertMessage('New transaction started');
                        }
                    } else {
                        this.showAlertMessage('Ready for new transaction');
                    }
                },

                holdTransaction() {
                    if (this.items.length === 0) {
                        this.showAlertMessage('No transaction to hold');
                        return;
                    }

                    console.log('Holding transaction');
                    this.showAlertMessage('Transaction held');
                },

                cancelTransaction() {
                    if (this.items.length > 0) {
                        if (confirm('Cancel this transaction? All items will be cleared.')) {
                            this.items = [];
                            this.rmaSearch = '';
                            this.showAlertMessage('Transaction cancelled');
                        }
                    }
                },

                formatCurrency(amount) {
                    return amount.toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ',');
                },

                showAlertMessage(message) {
                    this.alertMessage = message;
                    this.showAlert = true;
                    setTimeout(() => {
                        this.showAlert = false;
                    }, 3000);
                }
            }
        }
    </script>
</body>
</html>