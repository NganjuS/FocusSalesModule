@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock Receipt</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container-main {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .page-header {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            color: white;
            padding: 25px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .page-header h1 {
            margin: 0;
            font-size: 28px;
            font-weight: 600;
        }

        .btn-receive-stock {
            background: white;
            color: #11998e;
            border: none;
            padding: 10px 25px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-receive-stock:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 255, 255, 0.3);
        }

        .btn-receive-stock:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .form-section {
            padding: 30px;
        }

        .search-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin-bottom: 25px;
            border: 2px dashed #11998e;
        }

        .search-section h3 {
            color: #11998e;
            margin-bottom: 20px;
            font-size: 20px;
            font-weight: 600;
        }

        .search-box {
            display: flex;
            gap: 15px;
            align-items: flex-end;
        }

        .search-box .form-group {
            flex: 1;
        }

        .header-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin-bottom: 25px;
        }

        .header-section h3 {
            color: #11998e;
            margin-bottom: 20px;
            font-size: 20px;
            font-weight: 600;
        }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 15px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .form-group input,
        .form-group textarea {
            padding: 10px 12px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s;
        }

        .form-group input:focus {
            outline: none;
            border-color: #11998e;
            box-shadow: 0 0 0 3px rgba(17, 153, 142, 0.1);
        }

        .form-group input:read-only,
        .form-group textarea:read-only {
            background: #f5f5f5;
            cursor: not-allowed;
            color: #666;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 80px;
        }

        .body-section h3 {
            color: #11998e;
            margin-bottom: 20px;
            font-size: 20px;
            font-weight: 600;
        }

        .table-container {
            overflow-x: auto;
            margin-bottom: 20px;
        }

        .items-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        .items-table thead {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            color: white;
        }

        .items-table th {
            padding: 15px;
            text-align: left;
            font-weight: 600;
            font-size: 14px;
        }

        .items-table td {
            padding: 12px 15px;
            border-bottom: 1px solid #e0e0e0;
            color: #666;
        }

        .items-table tbody tr:hover {
            background: #f8f9fa;
        }

        .btn-search {
            background: #11998e;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
            height: fit-content;
        }

        .btn-search:hover {
            background: #0d7f73;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(17, 153, 142, 0.3);
        }

        .alert {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .alert-success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }

        .alert-danger {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }

        .alert-info {
            background: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
        }

        .status-badge {
            display: inline-block;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
        }

        .status-issued {
            background: #fff3cd;
            color: #856404;
        }

        .status-received {
            background: #d4edda;
            color: #155724;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #999;
        }

        .empty-state i {
            font-size: 64px;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            color: #666;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <div class="container-main" x-data="stockReceiptManager()">
        <!-- Page Header -->
        <div class="page-header">
            <h1><i class="bi bi-box-arrow-in-left me-2"></i>Stock Receipt</h1>
            <button class="btn-receive-stock" @click="receiveStock()" :disabled="!stockTransfer || stockTransfer.isReceived">
                <i class="bi bi-check-circle me-2"></i>Receive Stock
            </button>
        </div>

        <!-- Form Section -->
        <div class="form-section">
            <!-- Alert Messages -->
            <div x-show="alertMessage" class="alert" :class="'alert-' + alertType" x-text="alertMessage"></div>

            <!-- Search Section -->
            <div class="search-section">
                <h3><i class="bi bi-search me-2"></i>Search Stock Issue</h3>
                <div class="search-box">
                    <div class="form-group">
                        <label>Stock Issue No <span style="color: red;">*</span></label>
                        <input type="text" x-model="searchIssueNo" placeholder="Enter Stock Issue No" @keyup.enter="searchStockIssue()">
                    </div>
                    <button class="btn-search" @click="searchStockIssue()">
                        <i class="bi bi-search"></i>Search
                    </button>
                </div>
            </div>

            <template x-if="!stockTransfer">
                <div class="empty-state">
                    <i class="bi bi-inbox"></i>
                    <h3>No Stock Issue Loaded</h3>
                    <p>Enter a Stock Issue Number above and click Search to load the details</p>
                </div>
            </template>

            <template x-if="stockTransfer">
                <div>
                    <!-- Status Badge -->
                    <div style="margin-bottom: 20px;">
                        <span class="status-badge" :class="stockTransfer.isReceived ? 'status-received' : 'status-issued'" x-text="stockTransfer.status"></span>
                        <template x-if="stockTransfer.isReceived">
                            <span style="margin-left: 10px; color: #666; font-size: 14px;">
                                Received on: <span x-text="stockTransfer.receivedDate"></span>
                            </span>
                        </template>
                    </div>

                    <!-- Header Section -->
                    <div class="header-section">
                        <h3><i class="bi bi-info-circle me-2"></i>Transfer Details</h3>
                        <div class="form-row">
                            <div class="form-group">
                                <label>Stock Issue No</label>
                                <input type="text" x-model="stockTransfer.stockIssueNo" readonly>
                            </div>
                            <div class="form-group">
                                <label>Transfer Date</label>
                                <input type="text" x-model="stockTransfer.transferDate" readonly>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label>From Outlet</label>
                                <input type="text" x-model="stockTransfer.fromOutletName" readonly>
                            </div>
                            <div class="form-group">
                                <label>To Outlet</label>
                                <input type="text" x-model="stockTransfer.toOutletName" readonly>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label>Narration</label>
                                <textarea x-model="stockTransfer.narration" readonly></textarea>
                            </div>
                        </div>
                    </div>

                    <!-- Body Section -->
                    <div class="body-section">
                        <h3><i class="bi bi-list-ul me-2"></i>Items</h3>
                        <div class="table-container">
                            <table class="items-table">
                                <thead>
                                    <tr>
                                        <th style="width: 5%;">#</th>
                                        <th style="width: 30%;">Item</th>
                                        <th style="width: 15%;">Code</th>
                                        <th style="width: 10%;">Unit</th>
                                        <th style="width: 15%;">Quantity</th>
                                        <th style="width: 25%;">RMA NO</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <template x-for="(item, index) in stockTransfer.items" :key="index">
                                        <tr>
                                            <td x-text="index + 1"></td>
                                            <td x-text="item.productName"></td>
                                            <td x-text="item.productCode"></td>
                                            <td x-text="item.unit"></td>
                                            <td x-text="item.quantity"></td>
                                            <td x-text="item.rmaNo"></td>
                                        </tr>
                                    </template>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </template>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.13.3/cdn.min.js"></script>

    <script>
        function stockReceiptManager() {
            return {
                searchIssueNo: '',
                stockTransfer: null,
                alertMessage: '',
                alertType: '',

                async searchStockIssue() {
                    if (!this.searchIssueNo || this.searchIssueNo.trim() === '') {
                        this.showAlert('Please enter a Stock Issue No', 'danger');
                        return;
                    }

                    try {
                        const response = await fetch(`/StockTransfer/GetStockTransferByIssueNo?issueNo=${encodeURIComponent(this.searchIssueNo)}`);
                        const result = await response.json();

                        if (result.success) {
                            this.stockTransfer = result.data;
                            this.showAlert('Stock Issue loaded successfully', 'success');
                        } else {
                            this.stockTransfer = null;
                            this.showAlert(result.message || 'Stock Issue not found', 'danger');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        this.stockTransfer = null;
                        this.showAlert('Error searching for stock issue', 'danger');
                    }
                },

                async receiveStock() {
                    if (!this.stockTransfer) {
                        this.showAlert('No stock issue loaded', 'danger');
                        return;
                    }

                    if (this.stockTransfer.isReceived) {
                        this.showAlert('This stock transfer has already been received', 'info');
                        return;
                    }

                    if (!confirm('Are you sure you want to receive this stock transfer?')) {
                        return;
                    }

                    try {
                        const response = await fetch('/StockTransfer/ReceiveStockTransfer', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ transferId: this.stockTransfer.id })
                        });

                        const result = await response.json();

                        if (result.success) {
                            this.showAlert('Stock received successfully', 'success');
                            // Reload the stock transfer to get updated status
                            await this.searchStockIssue();
                        } else {
                            this.showAlert(result.message || 'Error receiving stock', 'danger');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        this.showAlert('Error receiving stock', 'danger');
                    }
                },

                showAlert(message, type) {
                    this.alertMessage = message;
                    this.alertType = type;
                    setTimeout(() => {
                        this.alertMessage = '';
                    }, 5000);
                }
            }
        }
    </script>
</body>
</html>
